// Program name.cpp or task;
// options;

#include <iostream>
#include <string>
#include <fstream>
using namespace std;

///////////////////////////////////////////////

int main()
{
	///////////////////////////////////////////////////////////////////////
	string path = "myFile.txt";
	string new_path = "newFile.txt";
	fstream f;         // создание файловой переменной
	// cout << "\n Input path to the file: ";
	// getline(cin,path);
	int miss = 0, k;
	int a[100] = {};
	

	///////////////////////////////////////////////////////////////////////
	
	cout << "\n Input number of interations: "; cin >> k;  // ввод количества элементов в файле!!!
	f.open(path);   // открытие файла по пути, хран€щейс€ в строке path

	if (!f.is_open())         // условие провер€ющие открытие файла, если нет, то ошибка
	{
		cout << "\n Error, file cannot be opened! ";
	}
	else
	{
		cout << "\n Great, file opened! " << endl;    // файл успешно открыт 
		cout << "\n Input 5 multimply number of components count: " << endl;  // при вводе числа кратного п€ти, программа будет стабильно работать
		if (k % 5 == 0)
		{
			for (int i = 0; i < k; i++)       // алгоритм записи числа в файл
			{
				cin >> a[i];           // вводим из консоли элемент массива
				f << a[i] << endl;    // записываем его в файл
				miss++;           // уввеличиваем счЄтчик количества элементов в файле
				if (miss % 5 == 0)      // если количество элементов в файле кратно 5, то
				{
					cout << "\n Enter next 5 elements: "<< endl; // выводим сообщение, устанавливающее границу дл€ следующих 5 элементов 
				}
				
			}
		}
		else
		{
	    cout << "\n It's not right number of components,please try again " << endl; // аварийный выход при неправильном вводе максимального кол-ва символом
		exit(0);
		}
		
		f.close(); // метод, позвол€ющий закрыть файл
	} 

	ofstream g;    // создание файловой переменной(объекта), класса ofstream
	g.open(new_path); // открытие по пути, лежащей в строке new_path

	if (!g.is_open())  // условие провер€ющие открытие файла, если нет, то ошибка
	{
		cout << "\n Error, file cannot be opened! ";
	}
	else
	{
		
		cout << "\n Great, file opened! " << endl;
		while (k > 0)  // пока кол-во файлов в массиве больше нул€
		{
			int max = -1;          // максимум равен = -1, дл€ сравнени€
			for (int i = 0; i < 5; i++)               
			{
				if (a[i] > max) { max = a[i]; }   // условие, при котором перемещаетс€ перенос максимального числа, из первых 5-ти введЄнных;
			}
			cout << max << endl;     // выводим в консоль максимальный элемент
			g << max << "\n";        // выводим в файле(объекте) этот же максимальный элемент
			for (int i = 0; i < 5; i++)          // счЄтчик, смещающий количество теъ элементов, которые проверены на содержание максимального элемента
			{
				a[i] = a[i + 5]; // переход к следующей 5-рке, дл€ поиска максимального элемента
			}
			k -= 5; // вычитаем из колчества элементов 5, тк мы их уже проверили
		}
		
	}
	g.close(); // метоод, позвол€ющий закрыть файл

	return 0;
}